@model TiendaVirtual.Models.Producto
@using TiendaVirtual.Models;

@{
    ViewBag.Title = "Create";
    VirtualShopModelContainer db = new VirtualShopModelContainer();

    List<SelectListItem> categorias = new List<SelectListItem>();

    foreach (Categoria categoria in db.Categorias)
    {
        SelectListItem item = new SelectListItem();
        item.Value = categoria.Nombre;
        item.Text = categoria.Nombre;
        categorias.Add(item);
    }
}

<div class="render_body">
    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Producto</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
                <div style="display: flex; flex-direction: row; justify-content: space-between; align-items: center; width: 5vw;">
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Categoria.Nombre, categorias, null, null)
                    </div>
                    <div class="col-md-10">
                        <a  href="/Categorias/Create" style="text-decoration:none; border-radius: 500px; display:flex; justify-content:center; align-items:center; width: 50px;">
                            <button type="button" class="btn btn-default" style="border-radius: inherit; display: flex; justify-content: center; align-items: center;"><p style="margin: 0 0 1px;">+</p></button>
                        </a>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

<div>
    <a class="a-btn" href="/Productos" style="text-decoration:none;">Volver</a>
</div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
